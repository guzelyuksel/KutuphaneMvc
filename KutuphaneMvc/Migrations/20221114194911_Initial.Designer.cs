// <auto-generated />
using System;
using KutuphaneMvc.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KutuphaneMvc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221114194911_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KitapTur", b =>
                {
                    b.Property<string>("KitaplarIsbn")
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("TurlerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KitaplarIsbn", "TurlerId");

                    b.HasIndex("TurlerId");

                    b.ToTable("KitapTur");
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.Property<string>("KitaplarIsbn")
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("YazarlarId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KitaplarIsbn", "YazarlarId");

                    b.HasIndex("YazarlarId");

                    b.ToTable("KitapYazar");
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.Kitap", b =>
                {
                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("BasimSayisi")
                        .HasColumnType("int");

                    b.Property<DateTime>("BasimYili")
                        .HasColumnType("datetime2");

                    b.Property<int>("SayfaSayisi")
                        .HasColumnType("int");

                    b.Property<Guid?>("YayinEviId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Isbn");

                    b.HasIndex("YayinEviId");

                    b.ToTable("Kitap");
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.Tur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tur");
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.YayinEvi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("KurulusYili")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("YayinEvi");
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.Yazar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid?>("YayinEviId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("YayinEviId");

                    b.ToTable("Yazar");
                });

            modelBuilder.Entity("KitapTur", b =>
                {
                    b.HasOne("KutuphaneMvc.Classes.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitaplarIsbn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneMvc.Classes.Tur", null)
                        .WithMany()
                        .HasForeignKey("TurlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.HasOne("KutuphaneMvc.Classes.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitaplarIsbn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneMvc.Classes.Yazar", null)
                        .WithMany()
                        .HasForeignKey("YazarlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.Kitap", b =>
                {
                    b.HasOne("KutuphaneMvc.Classes.YayinEvi", "YayinEvi")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YayinEviId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("YayinEvi");
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.Yazar", b =>
                {
                    b.HasOne("KutuphaneMvc.Classes.YayinEvi", null)
                        .WithMany("Yazarlar")
                        .HasForeignKey("YayinEviId");
                });

            modelBuilder.Entity("KutuphaneMvc.Classes.YayinEvi", b =>
                {
                    b.Navigation("Kitaplar");

                    b.Navigation("Yazarlar");
                });
#pragma warning restore 612, 618
        }
    }
}
